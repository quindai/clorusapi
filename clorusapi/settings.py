"""
Django settings for clorusapi project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition
CUSTOM_APPS = ['accounts']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
]

INSTALLED_APPS+=CUSTOM_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'clorusapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'PAGE_SIZE':100,
}

WSGI_APPLICATION = 'clorusapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

ACTIVATED_DATABASE = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASS'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT'),
    },
}

if DEBUG:
    ACTIVATED_DATABASE={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
DATABASES = {
    config('MYSQL_DB1_NAME'): {
        'ENGINE': 'mysql.connector.django',
        'OPTIONS': {
            'sql_mode': 'traditional',
        },
        'NAME': config('MYSQL_DB1_NAME'),
        'USER': config('MYSQL_DB_USER'),
        'PASSWORD': config('MYSQL_DB_PASS'),
        'HOST': config('MYSQL_DB_HOST'),
        'PORT': config('MYSQL_DB_PORT'),
    },
    config('MYSQL_DB2_NAME'): {
        'ENGINE': 'mysql.connector.django',
        'OPTIONS': {
            'sql_mode': 'traditional',
        },
        'NAME': config('MYSQL_DB2_NAME'),
        'USER': config('MYSQL_DB_USER'),
        'PASSWORD': config('MYSQL_DB_PASS'),
        'HOST': config('MYSQL_DB_HOST'),
        'PORT': config('MYSQL_DB_PORT'),
    },   
    config('MYSQL_DB3_NAME'): {
        'ENGINE': 'mysql.connector.django',
        'OPTIONS': {
            'sql_mode': 'traditional',
        },
        'NAME': config('MYSQL_DB3_NAME'),
        'USER': config('MYSQL_DB_USER'),
        'PASSWORD': config('MYSQL_DB_PASS'),
        'HOST': config('MYSQL_DB_HOST'),
        'PORT': config('MYSQL_DB_PORT'),
    },
    config('MYSQL_DB4_NAME'): {
        'ENGINE': 'mysql.connector.django',
        'OPTIONS': {
            'sql_mode': 'traditional',
        },
        'NAME': config('MYSQL_DB4_NAME'),
        'USER': config('MYSQL_DB_USER'),
        'PASSWORD': config('MYSQL_DB_PASS'),
        'HOST': config('MYSQL_DB_HOST'),
        'PORT': config('MYSQL_DB_PORT'),
    },
}

DATABASES.update(ACTIVATED_DATABASE)


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
